# ============================================
#  HOME ASSISTANT WASHER NOTIFICATIONS PACKAGE
# ============================================
#  Home Assistant package for Washer notifications.  If not using packages
#  each section or entity type should be split out and placed into the 
#  proper location within your split or configuration.yaml file(s).
#
#  It assumes that you have an integrated energy monitoring smart plug
#  connected to the washer that reports real-time watts (sensor.washer_watts).
#
#  If not using MQTT, you can substitute an input text helper for the
#  washer state.  This option is shown in the blog: 
#  https://resinchemtech.blogspot.com/2024/01/washer-dryer-updated.html
#  and in commented-out code below
# =====================================================================

# ---------------------
#  Sensors and Helpers
# ---------------------
mqtt:
  sensor:
   # -----------------------------------
   #  Current State - set by automation
   # -----------------------------------
    - name: "Washer State"
      state_topic: "hass/state/washer"
      icon: mdi:washing-machine

# Substitute an input text helper if not using MQTT
# Remove the mqtt section above and uncomment the following two lines:

#input_text:
#  washer_state

input_boolean:
  notify_washer:
    name: Washer Notifications
    initial: on
    icon: mdi:account-voice

# ---------------------
#  Automations
# ---------------------
automation:
  # ===============================
  #  Washing Machine Start/Finish
  # ===============================
  - alias: 'Washer State - Start'
    trigger:
      platform: numeric_state
      entity_id: sensor.washer_watts
      above: 5
    # Make sure washer isn't already running and delaying between cycles - don't re-trigger
    condition:
      condition: template
      value_template: "{{ not is_state('sensor.washer_state'), 'Washing' }}" 
      # for non-MQTT, replace 'sensor.washer_state' with 'text_input.washer_state' above 
    action:
      - service: mqtt.publish
        data:
          topic: hass/state/washer
          payload: 'Washing'
          retain: 'true'
    # -----------------------------------
    # If not using MQTT, create a washer_state 
    # text input helper and replace
    # the above service call with this one:
    # -----------------------------------
    # - service: input_text.set_value
    #   target:
    #     entity_id: input_text.washer_state
    #   data:
    #     value: "Washing"    

  - alias: 'Washer State - Idle'
    trigger:
      platform: numeric_state
      entity_id: sensor.washer_watts
      below: 5
      for:
        minutes: 1
    condition:
      condition: template
      value_template: "{{ is_state(sensor.washer_state), 'Washing' }}"
      # for non-MQTT, replace 'sensor.washer_state' with 'text_input.washer_state' above 
    action:
      - service: mqtt.publish
        data:
          topic: hass/state/washer
          payload: 'Idle'
          retain: 'true'
    # -----------------------------------
    # If not using MQTT, create a washer_state 
    # text input helper and replace
    # the above service call with this one:
    # -----------------------------------
    # - service: input_text.set_value
    #   target:
    #     entity_id: input_text.washer_state
    #   data:
    #     value: "Idle"    

  # ===================================
  #  Voice Notifications
  # ===================================
  - alias: 'Washer Finished'
    trigger:
      platform: state
      entity_id: sensor.washer_state  
      # If not using MQTT, substitute the above entity_id line with this one:
      # entity_id: text_input.washer_state
      from: 'Washing'
      to: 'Idle'
    condition:
      # Check that voice notifications aren't snoozed or in night mode
      - condition: state
        entity_id: input_boolean.notify_washer
        state: 'on'
    action:
      - service: tts.google_say
        entity_id:
          - media_player.all_home_devices  #substitute your media_player name(s)
        data_template:
           message: "The washer has completed its cycle."
